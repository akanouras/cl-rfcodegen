(defpackage cl-rfcodegen
  (:use :cl :cl-annot)
  (:import-from :defclass-std
                :defclass/std))
(in-package :cl-rfcodegen)

(annot:enable-annot-syntax)

;;
;; RF 16  90 001 8  000000123456789 [ 00000012346 ]
;; RF CD  90 OOO P  CCCCCCCCCCCCCCC [ VVVVVVVVVVV ]
;;
;; Μέρος Θέση Ονομασία                      Μορφή Περιγραφή
;;
;; 1     1-2  RF                            2x    Σταθερή τιμή=RF
;;
;;       3-4  2 ψηφία ελέγχου               2n    Δημιουργείται και ελέγχεται σύμφωνα με τον αλγόριθμο
;;                                                Β.2.1.
;;
;; 2     5-9  Κωδικός Δικαιούχου Οργανισμού 5x    Ο Κωδικός Οργανισμού:
;;                                                ­ 90xxx, όταν ο κωδικός χρησιμοποιείται και ως Κωδικός
;;                                                Ανάθεσης και ως Κωδικός Πληρωμής (για χρήση Credit
;;                                                Transfer).
;;                                                ­ 00xxx, όταν ο κωδικός χρησιμοποιείται μόνο ως Κωδικός
;;                                                Ανάθεσης. Ο Κωδικός Οργανισμού βρίσκεται στις θέσεις
;;                                                7-9.
;;                                                Όπου xxx o 3ψήφιος Κωδικός Οργανισμού.
;;
;;       10                                 1n    Προσδιορίζει τον τρόπο πληρωμής και δύναται να λάβει τις
;;                                                ακόλουθες τιμές:
;;                                                ­ 8: Κοινός κωδικός για χρήση μέσω Credit Transfer και
;;                                                Direct Debit χωρίς έλεγχο ποσού.
;;                                                ­ 9: Διαφορετικός κωδικός για Credit Transfer χωρίς
;;                                                έλεγχο ποσού και διαφορετικός για Direct Debit.
;;                                                ­ 0-7: Μόνο μέσω Credit Transfer με έλεγχο ποσού. Η τιμή
;;                                                του ψηφίου δημιουργείται και ελέγχεται σύμφωνα με
;;                                                τον αλγόριθμο του Παραρτήματος Β.2.2
;;
;; 3      11-25 Κωδικός Οφειλέτη ή Οφειλής  15n   Χρησιμοποιείται από τον Οργανισμό για την κωδικοποίηση
;;                                                του οφειλέτη και δεν ελέγχεται από την Τράπεζα Πληρωτή.
;;                                                Προηγούνται μηδενικά (0) έως την συμπλήρωση 15
;;                                                ψηφίων.
;;
;; B.2 Αλγόριθμοι Κωδικού Πληρωμής (πρότυπο RI18)
;;
;; B.2.1 Δημιουργία Ψηφίων Ελέγχου κατά Mod97 (ψηφία 3-4 του Κωδικού Πληρωμής)
;;
;; Τα ψηφία ελέγχου υπολογίζονται σύμφωνα με τα παρακάτω βήματα:
;;
;; 1. Αρχικά συνθέτουμε τον 21ψήφιο προσωρινό κωδικό (μέρη 2 και 3).
;; 2. Προσθέτουμε στο τέλος του 21ψήφιου προσωρινού κωδικού την τιμή: 271500.
;; 3. Υπολογίζουμε το υπόλοιπο της διαίρεσης του αριθμού που προκύπτει (27 ψηφία) με το 97 (κατά mod97):
;;      Y = 9nnnnxccccccccccccccc271500 mod 97.
;; 4. Αφαιρούμε το υπόλοιπο από το 98: 98-Υ. Ο αριθμός που προκύπτει, εάν είναι μονοψήφιος
;;    συμπληρώνεται με 0 αριστερά και αποτελεί τα ψηφία ελέγχου. Δηλ. CD=98-Y.
;; 5. Τέλος τοποθετούμε τα γράμματα RF και το CD στην αριστερή πλευρά του προσωρινού κωδικού:
;;      RFCD9nnnnxccccccccccccccc
;;
;; Τα ψηφία ελέγχου επαληθεύονται σύμφωνα με τα παρακάτω βήματα:
;;
;; 1. Αποσπούμε τα 21 δεξιά ψηφία του Κωδικού Πληρωμής και μεταφέρουμε στο τέλος τους τα ψηφία
;;    2715 και τα δύο ψηφία ελέγχου (CD):
;;      Α = 9nnnnxccccccccccccccc2715CD
;; 2. Εφαρμόζουμε Υ = Α mod 97.
;; 3. Εφόσον Υ = 1 τότε τα ψηφία ελέγχου (CD) είναι σωστά.
;;
;; Β.2.2 Δημιουργία Ψηφίου Ελέγχου του Ποσού (10ο ψηφίο του Κωδικού Πληρωμής)
;;
;; Ο αλγόριθμος εφαρμόζεται ΜΟΝΟ στο ποσό.
;; 1. Μετατρέπουμε το ποσό από ευρώ (π.χ. 132,45€) σε λεπτά (π.χ. 13245) ώστε να αφαιρεθεί η
;; υποδιαστολή.
;; 2. Πολλαπλασιάζουμε τα ψηφία του αριθμού από δεξιά (π.χ. 54231) προς τα αριστερά με τους
;; συντελεστές:
;; 1, 7, 3, 1, 7, 3, 1, 7, 3, 1, 7 και προσθέτουμε τα επιμέρους γινόμενα (π.χ. 5*1+4*7+2*3+3*1+1*7)
;; 3. Διαιρούμε με το 8. Το υπόλοιπο της διαίρεσης είναι το ψηφίο ελέγχου.
;;
;; Σημαντική σημείωση:
;; Στην περίπτωση όπου ο κωδικός περιλαμβάνει έλεγχο ποσού, προηγείται η δημιουργία του ψηφίου
;; ελέγχου για το ποσό (10ο ψηφίο) και έπεται η δημιουργία των ψηφίων ελέγχου (3ο και 4ο ψηφίο).
;;

;; (defclass/std dias-creditor-reference ()
;;   ((prefix :initform "RF")
;;    (check-digits :initform 0)
;;    (creditor-identifier-type :initform 90)  ; or 00
;;    (creditor-identifier-number)             ; 0 <= id < 1000
;;    (payment-type :initform 8)               ; or 9 or 0-7 (computed)
;;    (debt-identifier :initform 0)))


@export
(defun generate-dias-creditor-reference
    (creditor-identifier
     debt-identifier
     &optional
       (payment-type 8)
       (reference-type 90))

  (let* ((part2+3 (format nil
                          "~2,'0d~3,'0d~d~15,'0d"
                          reference-type
                          creditor-identifier
                          payment-type
                          debt-identifier))
         (dividend (parse-integer (format nil "~a271500" part2+3)))
         (modulus (mod dividend 97))
         (removed-from-98 (- 98 modulus))
         (check-digits (format nil "~2,'0d" removed-from-98))
         (creditor-reference (format nil "RF~a~a" check-digits part2+3)))
    creditor-reference))

